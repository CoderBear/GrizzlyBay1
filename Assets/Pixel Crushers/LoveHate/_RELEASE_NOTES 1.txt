/*
Love/Hate
Copyright © Pixel Crushers
RELEASE NOTES
-------------

Version 1.71
- Fixed: Unity 5.2.2 deprecation warning for Physics2D.raycastsStartInColliders.


Version 1.7
- Breaking Change: Save game serialization format changed to accommodate relationship inheritability value.
- Added: Customizable emotion model.
- Added: Relationships can be marked inheritable (default) or non-inheritable.
- Added: Ability to affect relationship to subject's parents when changing relationship to a subject.
- Changed: When adding new factions in editor, initializes instead of copying previous item.
- Fixed: Possible division by zero in deed evaluation.
- Fixed: In editor, summing personality & relationship traits now clamp to [-100,+100].
- PlayMaker: Added GetEmotionalState, SetRelationshipInheritability actions.


Version 1.6
- Improved: FactionMembers are now ready on Awake, not Start.
- Changed: FactionManager now turns off debug messages when Debug.isDebugBuild is false.
- Makinom: Added UseFactionManager schematic node.
- ORK Framework: Added UseFactionManager step.
- PlayMaker: Added UseFactionManager action. Fixed SwitchFaction action.
- TradeSys: Updated for TradeSys 2.7.


Version 1.5
- Added: Option to sum or average traits when inheriting from parents.
- Improved: Faction member inspector shows traits and relationships at design time not just runtime.
- Makinom: Added support.
- ORK Framework: Added SwitchFaction, InheritTraitsFromParents Steps.
- PlayMaker: Added SwitchFaction, InheritTraitsFromParents actions.


Version 1.4
- Added: FactionDatabase.DestroyFaction method.
- Improved: Can inherit traits from parents in inspector and at runtime.
- Improved: Faction database and faction member inspectors now show inherited relationships.
- Changed: Moved multiplayer example into separate package to avoid API warning in Unity 5.1.
- Adventure Creator: Added support.
- ORK Framework: Updated for ORK Framework 2.5.1; added CreateNewFaction and DestroyFaction steps.
- TradeSys: Enhanced support.


Version 1.3
- Added: Multiplayer example & guide.
- Added: Wolf/rabbit/farmer simulation example.
- Added: FactionDatabase: CreateNewFaction()
- Added: FactionMember: SwitchFaction(), IRememberDeedEventHandler, IForgetDeedEventHandler,
  IModifyPADEventHandler, FactionMemberEvents component.
- Changed: Serialized FactionMember data now includes faction ID (since members can switch factions).
- Improved: Exposed FactionMember.DefaultEvaluateRumor().
- TradeSys: Added support.


Version 1.2
- Added: StabilizePAD component to return PAD to target values over time.
- Improved: FactionMember inspector shows memories, relationships & parents at runtime.
- Improved: Enhanced rumor evaluation (added TraitAlignmentImportance, PowerDifferenceCurve).
- Changed: Rolled FactionMember.ApplyRumorImpact into DefaultEvaluateRumor.


Version 1.1
- Added: Colored scene view gizmos for faction members and traits.
- Added: Aura triggers.
- Added: FactionManager and FactionMember string serialization methods.
- Improved: Improved rumor evalation. Added deed.aggression to better affect dominance.
- Improved: Faction manager now distributes witness evaluation of deeds across frames.
- Improved: Better handling of uninitialized fields.
- Improved: Added cache to interaction triggers to reduce component lookups.
- Improved: Replaced foreach loops to eliminate garbage collection caused by Mono boxing.
- Fixed: Deed template library editor bug when adding/removing templates.
- ORK Framework: Added support.
- PlayMaker: Added string serialization actions, OnAura and OnEnterAura events.


Version 1.0
- Initial release.
*/
